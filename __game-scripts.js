var HdrLightmap=pc.createScript("hdrLightmap");HdrLightmap.attributes.add("shaderChunk",{type:"asset",assetType:"shader"}),HdrLightmap.prototype.initialize=function(){for(var t=this.entity.findComponents("render"),e=0;e<t.length;++e)for(var a=t[e].meshInstances,r=0;r<a.length;r++){var i=a[r].material;i.chunks.lightmapSinglePS=this.shaderChunk.resource,i.update()}};var EventsButton=pc.createScript("eventsButton");EventsButton.attributes.add("clickEvent",{type:"string"}),EventsButton.attributes.add("pressedStartEvent",{type:"string"}),EventsButton.attributes.add("pressedEndEvent",{type:"string"}),EventsButton.attributes.add("hoverStartEvent",{type:"string"}),EventsButton.attributes.add("hoverEndEvent",{type:"string"}),EventsButton.prototype.initialize=function(){this.entity.button.on("click",(function(){this.clickEvent&&this.clickEvent.length>0&&this.app.fire(this.clickEvent)}),this),this.entity.button.on("pressedstart",(function(){this.pressedStartEvent&&this.pressedStartEvent.length>0&&this.app.fire(this.pressedStartEvent)}),this),this.entity.button.on("pressedend",(function(){this.pressedEndEvent&&this.pressedEndEvent.length>0&&this.app.fire(this.pressedEndEvent)}),this),this.entity.button.on("hoverstart",(function(){this.hoverStartEvent&&this.hoverStartEvent.length>0&&this.app.fire(this.hoverStartEvent)}),this),this.entity.button.on("hoverend",(function(){this.hoverEndEvent&&this.hoverEndEvent.length>0&&this.app.fire(this.hoverEndEvent)}),this)};var EventsVr=pc.createScript("eventsVr");EventsVr.attributes.add("availableEvent",{type:"string",default:"vr:available",title:"Available Event",description:"Fired when a VR session becomes available."}),EventsVr.attributes.add("unavailableEvent",{type:"string",default:"vr:unavailable",title:"Unvailable Event",description:"Fired when a VR session becomes unavailable."}),EventsVr.attributes.add("startEvent",{type:"string",default:"vr:started",title:"Start Event",description:"Fired when a VR session starts."}),EventsVr.attributes.add("endEvent",{type:"string",default:"vr:ended",title:"End Event",description:"Fired when a VR session starts."}),EventsVr.prototype.initialize=function(){this.app.xr.on("available:"+pc.XRTYPE_VR,(function(t){this.app.fire(t?this.availableEvent:this.unavailableEvent)}),this),this.app.xr.on("start",(function(){this.app.fire(this.startEvent)}),this),this.app.xr.on("end",(function(){this.app.fire(this.endEvent)}),this)},EventsVr.prototype.postInitialize=function(){if(this.app.xr.supported&&!this.app.xr.active){var t=this.app.xr.isAvailable(pc.XRTYPE_VR);this.app.fire(t?this.availableEvent:this.unavailableEvent)}};var EventsKeyboard=pc.createScript("eventsKeyboard");EventsKeyboard.attributes.add("keys",{type:"json",schema:[{name:"key",type:"number",enum:[{BACKSPACE:8},{TAB:9},{ENTER:13},{ESCAPE:27},{SPACE:32},{"ARROW UP":38},{"ARROW DOWN":40},{"ARROW LEFT":37},{"ARROW RIGHT":39},{0:48},{1:49},{2:50},{3:51},{4:52},{5:53},{6:54},{7:55},{8:56},{9:57},{A:65},{B:66},{C:67},{D:68},{E:69},{F:70},{G:71},{H:72},{I:73},{J:74},{K:75},{L:76},{M:77},{N:78},{O:79},{P:80},{Q:81},{R:82},{S:83},{T:84},{U:85},{V:86},{W:87},{X:88},{Y:89},{Z:90}],title:"Key",description:"The keyboard key that will fire events"},{name:"keyDownEvent",type:"string",title:"Key Down Event",description:"The event fired when the specified key is pressed"},{name:"keyRepeatEvent",type:"string",title:"Key Repeat Event",description:"The event fired when the specified key registers a repeat press after the initial press"},{name:"keyUpEvent",type:"string",title:"Key Up Event",description:"The event fired when the specified key is released"}],array:!0,title:"Keys",description:"The set of keyboard keys that are configured to fire events"}),EventsKeyboard.prototype.initialize=function(){var e=this.app,t=function(t){this.keys.forEach((function(n){n.key===t.keyCode&&(t.repeat&&n.keyRepeatEvent.length>0?e.fire(n.keyRepeatEvent,1):!t.repeat&&n.keyDownEvent.length>0&&e.fire(n.keyDownEvent,1))}))}.bind(this),n=function(t){this.keys.forEach((function(n){n.key===t.keyCode&&n.keyUpEvent.length>0&&e.fire(n.keyUpEvent,0)}))}.bind(this),addEventListeners=function(){window.addEventListener("keydown",t,!0),window.addEventListener("keyup",n,!0)},removeEventListeners=function(){window.addEventListener("keydown",t,!0),window.addEventListener("keyup",n,!0)};this.on("enable",addEventListeners),this.on("disable",removeEventListeners),this.on("destroy",removeEventListeners),addEventListeners()};var ActionVr=pc.createScript("actionVr");ActionVr.attributes.add("startEvent",{type:"string",title:"Start Event",description:"Event that starts the VR session."}),ActionVr.attributes.add("endEvent",{type:"string",title:"End Event",description:"Event that ends the VR session."}),ActionVr.attributes.add("space",{type:"number",enum:[{"Bounded Floor":0},{Local:1},{"Local Floor":2},{Unbounded:3},{Viewer:4}],default:1,title:"Space",description:"The tracking space for the VR session."}),ActionVr.prototype.startVr=function(){var t=[pc.XRSPACE_BOUNDEDFLOOR,pc.XRSPACE_LOCAL,pc.XRSPACE_LOCALFLOOR,pc.XRSPACE_UNBOUNDED,pc.XRSPACE_VIEWER];this.app.xr.supported&&(this.app.xr.active||this.app.xr.isAvailable(pc.XRTYPE_VR)&&(window.DeviceOrientationEvent&&window.DeviceOrientationEvent.requestPermission?DeviceOrientationEvent.requestPermission().then(function(e){"granted"==e&&window.addEventListener("deviceorientation",function(e){this.entity.camera.startXr(pc.XRTYPE_VR,t[this.space])}.bind(this))}.bind(this)).catch(console.error):this.entity.camera.startXr(pc.XRTYPE_VR,t[this.space])))},ActionVr.prototype.endVr=function(){this.app.xr.end()},ActionVr.prototype.initialize=function(){this.startEvent&&this.startEvent.length>0&&this.app.on(this.startEvent,this.startVr,this),this.endEvent&&this.endEvent.length>0&&this.app.on(this.endEvent,this.endVr,this),this.on("attr:startEvent",(function(t,e){e&&e.length>0&&app.off(e,this.startVr,this),t&&t.length>0&&app.on(t,this.startVr,this)})),this.on("attr:endEvent",(function(t,e){e&&e.length>0&&app.off(e,this.endVr,this),t&&t.length>0&&app.on(t,this.endVr,this)})),this.on("destroy",(function(){this.startEvent&&this.startEvent.length>0&&this.app.off(this.startEvent,this.startVr,this),this.endEvent&&this.endEvent.length>0&&this.app.off(this.endEvent,this.endVr,this)}))};var ActionSetBoolean=pc.createScript("actionSetBoolean");ActionSetBoolean.attributes.add("actions",{type:"json",schema:[{name:"event",title:"Event",description:"The event name that triggers this set action.",type:"string"},{name:"entity",title:"Entity",description:"The entity from where the path starts. If unset, this entity is used.",type:"entity"},{name:"path",title:"Path",description:"The path to set when the event fires.",type:"string"},{name:"value",title:"Value",type:"number",enum:[{False:0},{True:1}],description:"The value to set the property to.",default:1}],array:!0}),ActionSetBoolean.prototype.initialize=function(){this.actions.forEach((function(t){this.app.on(t.event,(function(){for(var e=t.path.split("."),n=t.entity?t.entity:this.entity,i=0;i<e.length-1;i++)n=n[e[i]];n[e[e.length-1]]=!!t.value}),this)}),this)};var CharacterController=pc.createScript("characterController");CharacterController.attributes.add("speed",{type:"number",default:5}),CharacterController.attributes.add("jumpImpulse",{type:"number",default:400}),CharacterController.prototype.initialize=function(){this.groundCheckRay=new pc.Vec3(0,-1.2,0),this.rayEnd=new pc.Vec3,this.groundNormal=new pc.Vec3,this.onGround=!0,this.jumping=!1},CharacterController.prototype.move=function(e){if(this.onGround&&!this.jumping){var t=new pc.Vec3,i=e.length();i>0&&(t.cross(this.groundNormal,e).cross(t,this.groundNormal),t.normalize().scale(i*this.speed)),this.entity.rigidbody.linearVelocity=t}},CharacterController.prototype.jump=function(){this.onGround&&!this.jumping&&(this.entity.rigidbody.applyImpulse(0,this.jumpImpulse,0),this.onGround=!1,this.jumping=!0,setTimeout(function(){this.jumping=!1}.bind(this),500))},CharacterController.prototype.update=function(e){var t=this.entity.getPosition();this.rayEnd.add2(t,this.groundCheckRay);var i=this.app.systems.rigidbody.raycastFirst(t,this.rayEnd);this.onGround=!!i,i&&this.groundNormal.copy(i.normal)};var FirstPersonCamera=pc.createScript("firstPersonCamera");FirstPersonCamera.attributes.add("camera",{title:"Camera",description:"The camera controlled by this first person view. It should be a child of the entity to which this script is assigned. If no camera is assigned, the script will create one for you.",type:"entity"}),FirstPersonCamera.prototype.initialize=function(){var e=this.app;this.camera||(this.camera=this.entity.findByName("Camera"),this.camera||(this.camera=new pc.Entity("FPS Camera"),this.camera.addComponent("camera"))),this.x=new pc.Vec3,this.z=new pc.Vec3,this.heading=new pc.Vec3,this.magnitude=new pc.Vec2,this.azimuth=0,this.elevation=0;var t=this.camera.forward.clone();t.y=0,t.normalize(),this.azimuth=Math.atan2(-t.x,-t.z)*(180/Math.PI),(new pc.Mat4).setFromAxisAngle(pc.Vec3.UP,-this.azimuth).transformVector(this.camera.forward,t),this.elevation=Math.atan(t.y,t.z)*(180/Math.PI),this.forward=0,this.strafe=0,this.jump=!1,this.cnt=0,e.on("firstperson:forward",(function(e){this.forward=e}),this),e.on("firstperson:strafe",(function(e){this.strafe=e}),this),e.on("firstperson:look",(function(e,t){this.azimuth+=e,this.elevation+=t,this.elevation=pc.math.clamp(this.elevation,-90,90)}),this),e.on("firstperson:jump",(function(){this.jump=!0}),this)},FirstPersonCamera.prototype.postUpdate=function(e){this.camera.setEulerAngles(this.elevation,this.azimuth,0),this.z.copy(this.camera.forward),this.z.y=0,this.z.normalize(),this.x.copy(this.camera.right),this.x.y=0,this.x.normalize(),this.heading.set(0,0,0),0!==this.forward&&(this.z.scale(this.forward),this.heading.add(this.z)),0!==this.strafe&&(this.x.scale(this.strafe),this.heading.add(this.x)),this.heading.length()>1e-4&&(this.magnitude.set(this.forward,this.strafe),this.heading.normalize().scale(this.magnitude.length())),this.jump&&(this.entity.script.characterController.jump(),this.jump=!1),this.entity.script.characterController.move(this.heading);var t=this.camera.getPosition();this.app.fire("cameramove",t)};var KeyboardInput=pc.createScript("keyboardInput");KeyboardInput.prototype.initialize=function(){var e=this.app,updateMovement=function(t,i){switch(t){case 38:case 87:e.fire("firstperson:forward",i);break;case 40:case 83:e.fire("firstperson:forward",-i);break;case 37:case 65:e.fire("firstperson:strafe",-i);break;case 39:case 68:e.fire("firstperson:strafe",i)}},keyDown=function(t){t.repeat||(updateMovement(t.keyCode,1),32===t.keyCode&&e.fire("firstperson:jump"))},keyUp=function(e){updateMovement(e.keyCode,0)},addEventListeners=function(){window.addEventListener("keydown",keyDown,!0),window.addEventListener("keyup",keyUp,!0)};this.on("enable",addEventListeners),this.on("disable",(function(){window.addEventListener("keydown",keyDown,!0),window.addEventListener("keyup",keyUp,!0)})),addEventListeners()};var MouseInput=pc.createScript("mouseInput");function applyRadialDeadZone(e,t,i,s){var a=e.length();if(a>i){var r=1-s-i,n=Math.min(1,(a-i)/r)/a;t.copy(e).scale(n)}else t.set(0,0)}MouseInput.prototype.initialize=function(){var e=this.app,t=e.graphicsDevice.canvas,mouseDown=function(e){document.pointerLockElement!==t&&t.requestPointerLock&&t.requestPointerLock()},mouseMove=function(i){if(document.pointerLockElement===t){var s=i.movementX||i.webkitMovementX||i.mozMovementX||0,a=i.movementY||i.webkitMovementY||i.mozMovementY||0;e.fire("firstperson:look",-s/5,-a/5)}},addEventListeners=function(){window.addEventListener("mousedown",mouseDown,!1),window.addEventListener("mousemove",mouseMove,!1)};this.on("enable",addEventListeners),this.on("disable",(function(){window.removeEventListener("mousedown",mouseDown,!1),window.removeEventListener("mousemove",mouseMove,!1)})),addEventListeners()};var TouchInput=pc.createScript("touchInput");TouchInput.attributes.add("deadZone",{title:"Dead Zone",description:"Radial thickness of inner dead zone of the virtual joysticks. This dead zone ensures the virtual joysticks report a value of 0 even if a touch deviates a small amount from the initial touch.",type:"number",min:0,max:.4,default:.3}),TouchInput.attributes.add("turnSpeed",{title:"Turn Speed",description:"Maximum turn speed in degrees per second",type:"number",default:150}),TouchInput.attributes.add("radius",{title:"Radius",description:"The radius of the virtual joystick in CSS pixels.",type:"number",default:50}),TouchInput.attributes.add("doubleTapInterval",{title:"Double Tap Interval",description:"The time in milliseconds between two taps of the right virtual joystick for a double tap to register. A double tap will trigger a jump.",type:"number",default:300}),TouchInput.prototype.initialize=function(){var e=this.app,t=e.graphicsDevice,i=t.canvas;this.remappedPos=new pc.Vec2,this.leftStick={identifier:-1,center:new pc.Vec2,pos:new pc.Vec2},this.rightStick={identifier:-1,center:new pc.Vec2,pos:new pc.Vec2},this.lastRightTap=0;var s=function(s){s.preventDefault();for(var a=t.width/i.clientWidth,r=t.height/i.clientHeight,n=s.changedTouches,o=0;o<n.length;o++){var h=n[o];if(h.pageX<=i.clientWidth/2&&-1===this.leftStick.identifier)this.leftStick.identifier=h.identifier,this.leftStick.center.set(h.pageX,h.pageY),this.leftStick.pos.set(0,0),e.fire("leftjoystick:enable",h.pageX*a,h.pageY*r);else if(h.pageX>i.clientWidth/2&&-1===this.rightStick.identifier){this.rightStick.identifier=h.identifier,this.rightStick.center.set(h.pageX,h.pageY),this.rightStick.pos.set(0,0),e.fire("rightjoystick:enable",h.pageX*a,h.pageY*r);var d=Date.now();d-this.lastRightTap<this.doubleTapInterval&&e.fire("firstperson:jump"),this.lastRightTap=d}}}.bind(this),a=function(s){s.preventDefault();for(var a=t.width/i.clientWidth,r=t.height/i.clientHeight,n=s.changedTouches,o=0;o<n.length;o++){var h=n[o];h.identifier===this.leftStick.identifier?(this.leftStick.pos.set(h.pageX,h.pageY),this.leftStick.pos.sub(this.leftStick.center),this.leftStick.pos.scale(1/this.radius),e.fire("leftjoystick:move",h.pageX*a,h.pageY*r)):h.identifier===this.rightStick.identifier&&(this.rightStick.pos.set(h.pageX,h.pageY),this.rightStick.pos.sub(this.rightStick.center),this.rightStick.pos.scale(1/this.radius),e.fire("rightjoystick:move",h.pageX*a,h.pageY*r))}}.bind(this),r=function(t){t.preventDefault();for(var i=t.changedTouches,s=0;s<i.length;s++){var a=i[s];a.identifier===this.leftStick.identifier?(this.leftStick.identifier=-1,e.fire("firstperson:forward",0),e.fire("firstperson:strafe",0),e.fire("leftjoystick:disable")):a.identifier===this.rightStick.identifier&&(this.rightStick.identifier=-1,e.fire("rightjoystick:disable"))}}.bind(this),addEventListeners=function(){i.addEventListener("touchstart",s,!1),i.addEventListener("touchmove",a,!1),i.addEventListener("touchend",r,!1)};this.on("enable",addEventListeners),this.on("disable",(function(){i.removeEventListener("touchstart",s,!1),i.removeEventListener("touchmove",a,!1),i.removeEventListener("touchend",r,!1)})),addEventListeners()},TouchInput.prototype.update=function(e){var t=this.app;if(-1!==this.leftStick.identifier){applyRadialDeadZone(this.leftStick.pos,this.remappedPos,this.deadZone,0);var i=this.remappedPos.x;this.lastStrafe!==i&&(t.fire("firstperson:strafe",i),this.lastStrafe=i);var s=-this.remappedPos.y;this.lastForward!==s&&(t.fire("firstperson:forward",s),this.lastForward=s)}if(-1!==this.rightStick.identifier){applyRadialDeadZone(this.rightStick.pos,this.remappedPos,this.deadZone,0);var a=-this.remappedPos.x*this.turnSpeed*e,r=-this.remappedPos.y*this.turnSpeed*e;t.fire("firstperson:look",a,r)}};var GamePadInput=pc.createScript("gamePadInput");GamePadInput.attributes.add("deadZoneLow",{title:"Low Dead Zone",description:"Radial thickness of inner dead zone of pad's joysticks. This dead zone ensures that all pads report a value of 0 for each joystick axis when untouched.",type:"number",min:0,max:.4,default:.2}),GamePadInput.attributes.add("deadZoneHigh",{title:"High Dead Zone",description:"Radial thickness of outer dead zone of pad's joysticks. This dead zone ensures that all pads can reach the -1 and 1 limits of each joystick axis.",type:"number",min:0,max:.4,default:.2}),GamePadInput.attributes.add("turnSpeed",{title:"Turn Speed",description:"Maximum turn speed in degrees per second",type:"number",default:150}),GamePadInput.prototype.initialize=function(){this.lastStrafe=0,this.lastForward=0,this.lastJump=!1,this.remappedPos=new pc.Vec2,this.leftStick={center:new pc.Vec2,pos:new pc.Vec2},this.rightStick={center:new pc.Vec2,pos:new pc.Vec2};var addEventListeners=function(){window.addEventListener("gamepadconnected",(function(e){})),window.addEventListener("gamepaddisconnected",(function(e){}))};this.on("enable",addEventListeners),this.on("disable",(function(){window.removeEventListener("gamepadconnected",(function(e){})),window.removeEventListener("gamepaddisconnected",(function(e){}))})),addEventListeners()},GamePadInput.prototype.update=function(e){for(var t=this.app,i=navigator.getGamepads?navigator.getGamepads():[],s=0;s<i.length;s++){var a=i[s];if(a&&"standard"===a.mapping&&a.axes.length>=4){this.leftStick.pos.set(a.axes[0],a.axes[1]),applyRadialDeadZone(this.leftStick.pos,this.remappedPos,this.deadZoneLow,this.deadZoneHigh);var r=this.remappedPos.x;this.lastStrafe!==r&&(t.fire("firstperson:strafe",r),this.lastStrafe=r);var n=-this.remappedPos.y;this.lastForward!==n&&(t.fire("firstperson:forward",n),this.lastForward=n),this.rightStick.pos.set(a.axes[2],a.axes[3]),applyRadialDeadZone(this.rightStick.pos,this.remappedPos,this.deadZoneLow,this.deadZoneHigh);var o=-this.remappedPos.x*this.turnSpeed*e,h=-this.remappedPos.y*this.turnSpeed*e;t.fire("firstperson:look",o,h),a.buttons[0].pressed&&!this.lastJump&&t.fire("firstperson:jump"),this.lastJump=a.buttons[0].pressed}}};

//# sourceMappingURL=__game-scripts.js.map